if(${TARDIGRADE_HEADER_ONLY})

    add_library(${PROJECT_NAME} INTERFACE)
    target_include_directories(${PROJECT_NAME} INTERFACE
                               $<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/${CPP_SRC_PATH}>
                               $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>)

    install(TARGETS ${PROJECT_NAME}
        EXPORT ${PROJECT_NAME}_Targets
        INCLUDES DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}
        ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR})
        install(FILES ${PROJECT_NAME}.h ${PROJECT_NAME}.cpp
        DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})

    foreach(package ${ADDITIONAL_HEADER_ONLY_LIBRARIES})
        install(TARGETS ${package}
                EXPORT ${package}_Targets
                INCLUDES DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}
                ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR})
        install(FILES ${package}.h ${package}.cpp
                DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})
    endforeach(package)

else()
    add_library(${PROJECT_NAME} "${PROJECT_NAME}.cpp" "${PROJECT_NAME}.h")
    set_target_properties(${PROJECT_NAME} PROPERTIES PUBLIC_HEADER ${PROJECT_NAME}.h)
    target_compile_options(${PROJECT_NAME} PUBLIC)
    install(TARGETS ${PROJECT_NAME}
            EXPORT ${PROJECT_NAME}_Targets
            ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
            LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
            INCLUDES DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}
            PUBLIC_HEADER DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})
endif()
